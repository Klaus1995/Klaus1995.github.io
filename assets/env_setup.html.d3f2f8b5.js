import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as l,a as n,b as e,d as a,e as t,r as c}from"./app.902c8dae.js";const r={},d=n("h1",{id:"environment-setup",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#environment-setup","aria-hidden":"true"},"#"),e(" Environment Setup")],-1),u=n("h2",{id:"prerequisite",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prerequisite","aria-hidden":"true"},"#"),e(" Prerequisite")],-1),p=n("p",null,[n("strong",null,"Bitsail"),e(" supports run integration tests on local IDE. To achieve that, you need:")],-1),m=n("li",null,"JDK1.8",-1),b=n("li",null,"maven 3.6+",-1),k={href:"https://www.docker.com/products/docker-desktop/",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>After correctly installing the above required components, we are able to run integration tests on your local IDE.</p><h2 id="build-from-source-code" tabindex="-1"><a class="header-anchor" href="#build-from-source-code" aria-hidden="true">#</a> Build From Source Code</h2><ul><li>Run the build script to package with flink embedded. <code>bash build.sh</code> If you have your own flink package provided by the cluster, you can also package without flink. <code>mvn clean package -pl bitsail-dist -am -Dmaven.test.skip=true</code></li></ul><p>After building the project, the output jar files are in the folder <code>bitsail-dist/target/</code>.</p><p>The project production file structure is as follows:</p><div class="language-simple line-numbers-mode" data-ext="simple"><pre class="language-simple"><code>bitsail-archive-\${version}-SNAPSHOT    
    /bin  
        /bitsail #Startup script
    /conf
        /bitsail.conf #bitsail system config
    /embedded
        /flink #embedded flink
    /examples #examples configuration files
        /example-datas #examples data
        /Fake_xx_Example.json #Fake source to xx examples config files
        /xx_Print_Example.json #xx to print sink examples config files
    /libs #jar libs
        /bitsail-core.jar #entering jar package
        /connectors #connector plugin jars
            /mapping #connector plugin config files
        /components #components jars，such as metric、dirty-collector
        /clients #bitsail client jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="run-local-integration-tests" tabindex="-1"><a class="header-anchor" href="#run-local-integration-tests" aria-hidden="true">#</a> Run Local Integration Tests</h2>`,7),h={href:"https://github.com/bytedance/bitsail/tree/master/bitsail-test/bitsail-connector-test",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"bitsail-connector-test",-1),_={href:"https://github.com/bytedance/bitsail/blob/master/bitsail-test/bitsail-connector-test/src/main/java/com/bytedance/bitsail/test/connector/test/EmbeddedFlinkCluster.java",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/bytedance/bitsail/blob/master/bitsail-connectors/bitsail-connectors-legacy/bitsail-connector-kafka/src/test/java/com/bytedance/bitsail/connector/legacy/kafka/source/KafkaSourceITCase.java",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.testcontainers.org/modules/kafka/",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"testKafkaSource",-1),j=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaSourceITCase</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  <span class="token annotation punctuation">@Test</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testKafkaSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">BitSailConfiguration</span> configuration <span class="token operator">=</span> <span class="token class-name">JobConfUtils</span><span class="token punctuation">.</span><span class="token function">fromClasspath</span><span class="token punctuation">(</span><span class="token string">&quot;kafka_to_print.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateConfiguration</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">EmbeddedFlinkCluster</span><span class="token punctuation">.</span><span class="token function">submitJob</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function w(C,E){const s=c("ExternalLinkIcon");return o(),l("div",null,[d,u,p,n("ul",null,[m,b,n("li",null,[n("a",k,[e("Docker desktop"),a(s)])])]),v,n("p",null,[e("In "),n("a",h,[f,a(s)]),e(" module, we provide the "),n("a",_,[e("EmbeddedFlinkCluster"),a(s)]),e(" class that can be used to start a job in local Flink MiniCluster.")]),n("p",null,[e("For example, we build an integration test "),n("a",g,[e("KafkaSourceITCase"),a(s)]),e(" for Kafka source connector. It uses "),n("a",x,[e("test container"),a(s)]),e(" to start kafka service in local docker. We can run the "),y,e(" method to start a kafka2print task in local flink MiniCluster.")]),j])}const T=i(r,[["render",w],["__file","env_setup.html.vue"]]);export{T as default};
